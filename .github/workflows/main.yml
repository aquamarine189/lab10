# ชื่อของ Workflow
name: MLOps Pipeline CI/CT/CD

# ให้รันเมื่อ push / PR เข้า main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # --- JOB สำหรับ CI ---
  ci-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r mlops_pipeline/requirements.txt
          # เครื่องมือ Lint/Test
          pip install flake8 pytest pandas

      - name: Lint with flake8 (blocking errors logged but won't fail CI)
        run: |
          # รอบเข้มงวด (E9,F63,F7,F82) ถ้ามี error ให้ log ออกมา แต่ไม่ให้ CI ล้ม
          flake8 mlops_pipeline/scripts --count --select=E9,F63,F7,F82 --show-source --statistics || true
          # รอบรายงานคุณภาพ (complexity/line length) ไม่ block อยู่แล้ว
          flake8 mlops_pipeline/scripts --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest || (if [ $? -eq 5 ]; then echo "Pytest finished: No tests found."; exit 0; else exit $?; fi)

  # --- JOB สำหรับ Build & Train ---
  build-and-train:
    needs: ci-checks   # ให้รันหลังจาก ci-checks ผ่านเท่านั้น
    runs-on: ubuntu-latest
    env:
      # ใช้ local file store เพื่อให้ runner ของ GitHub ใช้งานได้แน่ๆ
      MLFLOW_TRACKING_URI: file:./mlruns

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r mlops_pipeline/requirements.txt

      - name: Run Data Validation
        run: python mlops_pipeline/scripts/01_data_validation.py

      - name: Run Data Preprocessing
        id: preprocessing
        run: python mlops_pipeline/scripts/02_data_preprocessing.py

      - name: Run Model Training, Evaluation, and Registration
        run: python mlops_pipeline/scripts/03_train_evaluate_register.py ${{ steps.preprocessing.outputs.run_id }} 10.0

      - name: Transition Model to Staging
        if: success()
        run: python mlops_pipeline/scripts/04_transition_model.py "wine-classifier-prod" "Staging"

      - name: Upload MLflow artifacts for inspection
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: mlruns/
